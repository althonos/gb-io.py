name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux, x86-64)
    runs-on: ubuntu-latest
    env:
      OS: Linux
    strategy:
      matrix:
        include:
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: v3.10
          python-impl: CPython
        - python-version: "3.11"
          python-release: v3.11
          python-impl: CPython
        - python-version: "3.12"
          python-release: v3.12
          python-impl: CPython
        - python-version: "3.13"
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Update CI requirements
      run: python -m pip install -U -r .github/workflows/requirements.txt
    - name: Build Rust extension
      run: python -m pip install --no-build-isolation -e . -vv
    - name: Test Rust extension
      run: python -m unittest discover -vv

  # test_linux_aarch64:
  #   name: Test (Linux, Aarch64)
  #   strategy:
  #     matrix:
  #       python-version: [cp37-cp37m, cp38-cp38, cp39-cp39, cp310-cp310]
  #     fail-fast: false
  #   runs-on: ubuntu-latest
  #   env:
  #     pyo3-python: /opt/python/${{ matrix.python-version }}/bin/python
  #     img: quay.io/pypa/manylinux2014_aarch64
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Set up QEMU
  #     id: qemu
  #     uses: docker/setup-qemu-action@v1
  #   - name: Test Rust extension
  #     uses: addnab/docker-run-action@v2
  #     with:
  #       image: ${{ env.img }}
  #       options: --rm -v ${{ github.workspace }}:/io:rw --workdir=/io
  #       shell: bash
  #       run: |
  #         ${{ env.pyo3-python }} -m pip install -U -r .github/workflows/requirements.txt
  #         ${{ env.pyo3-python }} setup.py build_ext --inplace --debug
  #         if [ ${{ matrix.python-version }} != 'cp36-cp36m' ]; then
  #             ${{ env.pyo3-python }} -m unittest discover -vv
  #         fi

  test_osx:
    name: Test (OSX, x86-64)
    runs-on: macos-latest
    env:
      OS: OSX
    strategy:
      matrix:
        include:
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: "v3.10"
          python-impl: CPython
        - python-version: "3.11"
          python-release: "v3.11"
          python-impl: CPython
        - python-version: "3.12"
          python-release: "v3.12"
          python-impl: CPython
        - python-version: "3.13"
          python-release: "v3.13"
          python-impl: CPython
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Update CI requirements
      run: python -m pip install -U -r .github/workflows/requirements.txt
    - name: Build Rust extension
      run: python -m pip install --no-build-isolation -e . -vv
    - name: Test Rust extension
      run: python -m unittest discover -vv

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python-version: "3.13"
          python-release: "v3.13"
          python-impl: CPython
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Measure code coverage
      run: cargo tarpaulin -v --out Xml --ciserver github-actions
    - name: Upload coverage statistics
      uses: codecov/codecov-action@v2
